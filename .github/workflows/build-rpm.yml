name: Build and test rpm package for linupdate

on:
  push:
    branches: [ devel ]
  pull_request:
    push:
      branches: [ main ]

jobs:
  # Build rpm package
  # Even it is build on CentOS7, package should be installable on RHEL7/8/9 based systems
  build-rpm:
    name: Build rpm package
    runs-on: ubuntu-latest
    env:
      # Force to use node16 (for actions/checkout@v3)
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    container:
      image: centos:7
      options: --user root
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get linupdate version
        run: echo "VERSION=$(cat ${GITHUB_WORKSPACE}/version)" >> $GITHUB_ENV

      - name: Install CentOS7 archive repositories
        run: |
          rm /etc/yum.repos.d/* -f

          echo "[os]
          name=os repo
          baseurl=https://vault.centos.org/7.9.2009/os/x86_64/
          enabled=1
          gpgkey=https://vault.centos.org/RPM-GPG-KEY-CentOS-7
          gpgcheck=1" > /etc/yum.repos.d/os.repo

          echo "[extras]
          name=extras repo
          baseurl=https://vault.centos.org/7.9.2009/extras/x86_64/
          enabled=1
          gpgkey=https://vault.centos.org/RPM-GPG-KEY-CentOS-7
          gpgcheck=1" > /etc/yum.repos.d/extras.repo

          echo "[updates]
          name=updates repo
          baseurl=https://vault.centos.org/7.9.2009/updates/x86_64/
          enabled=1
          gpgkey=https://vault.centos.org/RPM-GPG-KEY-CentOS-7
          gpgcheck=1" > /etc/yum.repos.d/updates.repo

          yum clean all

      - name: Install dependencies packages
        run: yum install rpmdevtools rpmlint -y

      - name: Create build environment
        run: |
          mkdir -p $HOME/rpmbuild/BUILD
          mkdir -p $HOME/rpmbuild/BUILDROOT
          mkdir -p $HOME/rpmbuild/RPMS
          mkdir -p $HOME/rpmbuild/SOURCES
          mkdir -p $HOME/rpmbuild/SPECS
          mkdir -p /etc/linupdate/modules
          mkdir -p /opt/linupdate
          mkdir -p /opt/linupdate/.src/
          mkdir -p /opt/linupdate/mods-available/
          mkdir -p /opt/linupdate/mods-enabled/
          mkdir -p /opt/linupdate/agents-available/
          mkdir -p /opt/linupdate/agents-enabled/
          mkdir -p /opt/linupdate/service/
          mkdir -p /lib/systemd/system/

      - name: Copy files to include in the build
        run: |
          cp -r ${GITHUB_WORKSPACE}/src/* /opt/linupdate/.src/
          cp -r ${GITHUB_WORKSPACE}/mods-available/* /opt/linupdate/mods-available/
          cp -r ${GITHUB_WORKSPACE}/service/* /opt/linupdate/service/
          cp ${GITHUB_WORKSPACE}/linupdate /opt/linupdate/linupdate
          cp ${GITHUB_WORKSPACE}/version /opt/linupdate/version
          cp -r ${GITHUB_WORKSPACE}/service/linupdate.systemd.template /lib/systemd/system/linupdate.service

      - name: Copy spec file
        run: |
          cp ${GITHUB_WORKSPACE}/.github/workflows/packaging/rpm/spec $HOME/rpmbuild/SPECS/linupdate.spec
          sed -i "s/__VERSION__/${{ env.VERSION }}/g" $HOME/rpmbuild/SPECS/linupdate.spec

      - name: Build package
        run: |
          cd $HOME/rpmbuild/SPECS
          rpmbuild --target noarch -bb --quiet linupdate.spec
          mv $HOME/rpmbuild/RPMS/noarch/linupdate-${{ env.VERSION }}-stable.noarch.rpm /tmp/linupdate-test-build-${{ env.VERSION }}.noarch.rpm

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: linupdate-test-build-${{ env.VERSION }}.noarch.rpm
          path: /tmp/linupdate-test-build-${{ env.VERSION }}.noarch.rpm
          retention-days: 1


  # Try to install packages on latest Fedora
  install-fedora:
    name: Install on latest Fedora
    needs:
      build-rpm
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
      options: --user root
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get linupdate version
        run: echo "VERSION=$(cat ${GITHUB_WORKSPACE}/version)" >> $GITHUB_ENV

      #Â Download builded deb package artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: linupdate-test-build-${{ env.VERSION }}.noarch.rpm

      - name: Install package
        run: |
          dnf update -y
          dnf clean all
          dnf --nogpgcheck localinstall -y ./linupdate-test-build-${{ env.VERSION }}.noarch.rpm
